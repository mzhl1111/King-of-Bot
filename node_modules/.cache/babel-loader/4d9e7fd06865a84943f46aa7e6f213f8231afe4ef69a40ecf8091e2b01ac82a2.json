{"ast":null,"code":"import ContentCard from \"@/components/ContentCard.vue\";\nimport { useStore } from \"vuex\";\nimport $ from \"jquery\";\nimport { ref } from \"vue\";\nexport default {\n  components: {\n    ContentCard\n  },\n  setup() {\n    const store = useStore();\n    let replays = ref([]);\n    let current_page = 1;\n    let total_replays = 0;\n    const pull_page = page => {\n      current_page = page;\n      $.ajax({\n        url: \"http://localhost:8888/replay/getlist/\",\n        data: {\n          page\n        },\n        type: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + store.state.user.token\n        },\n        success(resp) {\n          replays.value = resp.replays;\n          total_replays = resp.replays_count;\n        },\n        error(resp) {\n          console.log(resp);\n        }\n      });\n    };\n    pull_page(current_page);\n    return {\n      replays,\n      total_replays\n    };\n  }\n};","map":{"version":3,"names":["ContentCard","useStore","$","ref","components","setup","store","replays","current_page","total_replays","pull_page","page","ajax","url","data","type","headers","Authorization","state","user","token","success","resp","value","replays_count","error","console","log"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/views/replay/replayIndexView.vue"],"sourcesContent":["<template>\n    <ContentCard>\n        <table class=\"table table-hover\">\n            <thead>\n                <th> A</th>\n                <th> Create time</th>\n                <th> Operation</th>\n            </thead>\n            <tbody>\n                <tr v-for=\"bot in bots\" :key=\"bot.id\">\n                <td>{{ bot.botName }}</td>\n                <td>{{ bot.createTime }}</td>\n                <td>\n                    <button class=\"btn btn-primary\" data-bs-toggle=\"modal\" :data-bs-target=\"'#modify-bot-btn-' + bot.id\" style=\"margin-right: 10px;\">Edit</button>\n                    <!-- Modal -->\n                    <div class=\"modal modal-xl modal-dialog-scrollable\" :id=\"'modify-bot-btn-' + bot.id\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Update bot</h1>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <!-- form -->\n                            <div class=\"mb-3\">\n                            <label for=\"modify-bot-name\" class=\"form-label\">Update bot name</label>\n                            <input v-model=\"bot.botName\" type=\"text\" class=\"form-control\" id=\"modify-bot-name\" :placeholder=\"'Before edit:\\n' + bot.botName\">\n                            </div>\n                            <div class=\"mb-3\">\n                            <label for=\"modify-bot-descrption\" class=\"form-label\">Update description</label>\n                            <textarea v-model=\"bot.description\" class=\"form-control\" id=\"modify-bot-description\" rows=\"3\" :placeholder=\"'Before edit:\\n'+ bot.description\"></textarea>\n                            </div>\n                            <div class=\"mb-3\">\n                            <label for=\"modify-bot-descrption\" class=\"form-label\">Update code</label>\n                            <VAceEditor\n                                v-model:value=\"bot.content\"\n                                @init=\"editorInit\"\n                                theme=\"textmate\"\n                                style=\"height: 500px\"\n                                :options=\"{\n                                enableBasicAutocompletion: true, //basic auto complete\n                                enableSnippets: true, // code paragraph\n                                enableLiveAutocompletion: true, // real-time auto complete\n                                fontSize: 14, //\n                                tabSize: 2, // \n                                showPrintMargin: false, // remove the codestyle column\n                                highlightActiveLine: true,\n                                }\"\n                            />\n                            </div>\n                            <!-- end form -->\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div class=\"error-message\">{{ bot.error_message }}</div>\n                            <button type=\"button\" class=\"btn btn-primary\" @click=\"modify_bot(bot)\">Update</button>\n                        </div>\n                        </div>\n                    </div>\n                    </div> \n                    <!--end Modal-->\n                    <button class=\"btn btn-danger\" data-bs-toggle=\"button\" @click=\"remove_bot(bot)\">Delete</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </ContentCard>\n</template>\n\n<script>\nimport ContentCard from \"@/components/ContentCard.vue\";\nimport { useStore } from \"vuex\";\nimport $ from \"jquery\";\nimport { ref } from \"vue\";\n\nexport default {\n    components: {\n        ContentCard\n    },\n    setup() {\n        const store = useStore();\n        let replays = ref([]);\n        let current_page = 1;\n        let total_replays = 0;\n\n\n        const pull_page = page => {\n            current_page = page;\n            $.ajax({\n                url: \"http://localhost:8888/replay/getlist/\",\n                data: {\n                    page,\n                },\n                type: \"GET\",\n                headers: {\n                    Authorization: \"Bearer \" + store.state.user.token,\n                },\n                success(resp) {\n                    replays.value = resp.replays;\n                    total_replays = resp.replays_count;\n                },\n                error(resp) {\n                    console.log(resp);\n                }\n            })\n        }\n        pull_page(current_page);\n\n        return {\n            replays,\n            total_replays\n        }   \n    }\n\n}\n\n</script>\n\n<style scoped></style>"],"mappings":"AAoEA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,CAAA,MAAO,QAAQ;AACtB,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACXC,UAAU,EAAE;IACRJ;EACJ,CAAC;EACDK,KAAKA,CAAA,EAAG;IACJ,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,IAAIM,OAAM,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACrB,IAAIK,YAAW,GAAI,CAAC;IACpB,IAAIC,aAAY,GAAI,CAAC;IAGrB,MAAMC,SAAQ,GAAIC,IAAG,IAAK;MACtBH,YAAW,GAAIG,IAAI;MACnBT,CAAC,CAACU,IAAI,CAAC;QACHC,GAAG,EAAE,uCAAuC;QAC5CC,IAAI,EAAE;UACFH;QACJ,CAAC;QACDI,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;UACLC,aAAa,EAAE,SAAQ,GAAIX,KAAK,CAACY,KAAK,CAACC,IAAI,CAACC;QAChD,CAAC;QACDC,OAAOA,CAACC,IAAI,EAAE;UACVf,OAAO,CAACgB,KAAI,GAAID,IAAI,CAACf,OAAO;UAC5BE,aAAY,GAAIa,IAAI,CAACE,aAAa;QACtC,CAAC;QACDC,KAAKA,CAACH,IAAI,EAAE;UACRI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;QACrB;MACJ,CAAC;IACL;IACAZ,SAAS,CAACF,YAAY,CAAC;IAEvB,OAAO;MACHD,OAAO;MACPE;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}