{"ast":null,"code":"import { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport $ from \"jquery\";\nlet bots = ref([]);\nexport default {\n  setup() {\n    const store = useStore();\n    let match_btn_info = ref('Start Matching');\n    const click_match_btn = () => {\n      if (match_btn_info.value === 'Start Matching') {\n        match_btn_info.value = \"Cancel Matching\";\n        store.state.pk.socket.send(JSON.stringify({\n          event: \"start matching\"\n        }));\n      } else {\n        match_btn_info.value = \"Start Matching\";\n        store.state.pk.socket.send(JSON.stringify({\n          event: \"stop matching\"\n        }));\n      }\n    };\n    const refresh_bots = () => {\n      $.ajax({\n        url: \"http://localhost:8888/user/bot/getall/\",\n        type: \"GET\",\n        data: {},\n        headers: {\n          Authorization: \"Bearer \" + store.state.user.token\n        },\n        success(resp) {\n          bots.value = resp;\n        },\n        error(resp) {\n          console.log(resp);\n        }\n      });\n    };\n    refresh_bots();\n    return {\n      match_btn_info,\n      click_match_btn\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","$","bots","setup","store","match_btn_info","click_match_btn","value","state","pk","socket","send","JSON","stringify","event","refresh_bots","ajax","url","type","data","headers","Authorization","user","token","success","resp","error","console","log"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/components/MatchGround.vue"],"sourcesContent":["<template>\n    <div class=\"MatchGround\">\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <div class=\"user-photo\">\n                    <img :src=\"$store.state.user.photo\" alt=\"\">\n                </div>\n                <div class=\"user-username\">\n                    {{ $store.state.user.username }}\n                </div>\n            </div>\n            <div class=\"col-4\">\n                <div class=\"user-select-bot\">\n                    <select class=\"form-select\" aria-label=\"Default select example\">\n                    <option value=selected>Play as human</option>\n                    <option v-for=\"bot in bots\" :key=\"bot.id\" :value=\"bot.id\"></option>\n                    </select>\n                </div> \n            </div>\n            <div class=\"col-4\">\n                <div class=\"user-photo\">\n                    <img :src=\"$store.state.pk.opponent_photo\" alt=\"\">\n                </div>\n                <div class=\"user-username\">\n                    {{ $store.state.pk.opponent_username }}\n                </div>\n            </div>\n            <div class=\"col-12\" style=\"text-align: center; padding-top: 15vh;\">\n                <button @click=\"click_match_btn\" type=\"button\" class=\"btn btn-light btn-xl\">{{ match_btn_info }}</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {ref} from \"vue\"\nimport { useStore } from \"vuex\"\nimport $ from \"jquery\"\nlet bots = ref([]);\n\nexport default {\n    setup() {\n        const store = useStore();\n        let match_btn_info = ref('Start Matching');\n\n        const click_match_btn = () => {\n            if (match_btn_info.value === 'Start Matching') {\n                match_btn_info.value = \"Cancel Matching\"\n                store.state.pk.socket.send(JSON.stringify({\n                    event: \"start matching\",\n\n                }))\n            } else {\n                match_btn_info.value = \"Start Matching\"\n                store.state.pk.socket.send(JSON.stringify({\n                    event: \"stop matching\",\n                    \n                }))\n            }\n        }\n\n        const refresh_bots = () => {\n            $.ajax({\n                url: \"http://localhost:8888/user/bot/getall/\",\n                type: \"GET\",\n                data: {\n                },\n                headers: {\n                Authorization: \"Bearer \" + store.state.user.token\n                },\n                success(resp) {\n                bots.value = resp;\n                },\n                error(resp) {\n                console.log(resp);\n                }\n            })\n        }\n\n        refresh_bots();\n\n        return {\n            match_btn_info,\n            click_match_btn,\n        }\n    }\n}\n</script>\n\n<style scoped>\n\ndiv.MatchGround {\n    width: 60vw;\n    height: 70vh;\n    margin: 40px auto;\n    background-color: rgba(50, 50, 50, 0.5);\n}\n\ndiv.user-photo {\n    text-align: center;\n    padding-top: 20vh;\n}\ndiv.user-photo > img {\n    border-radius: 50%;\n    width: 20vh;\n}\ndiv.user-username {\n    text-align: center;\n    font-size: 24px;\n    font-weight: 600;\n    color: white;\n    padding-top: 2vh;\n}\ndiv.user-select-bot {\n    padding-top: 20vh;\n}\ndiv.user-select-bot > select {\n    width: 65%;\n    margin: 0 auto;\n}\n</style>"],"mappings":"AAmCA,SAAQA,GAAG,QAAO,KAAI;AACtB,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,CAAA,MAAO,QAAO;AACrB,IAAIC,IAAG,GAAIH,GAAG,CAAC,EAAE,CAAC;AAElB,eAAe;EACXI,KAAKA,CAAA,EAAG;IACJ,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,IAAIK,cAAa,GAAIN,GAAG,CAAC,gBAAgB,CAAC;IAE1C,MAAMO,eAAc,GAAIA,CAAA,KAAM;MAC1B,IAAID,cAAc,CAACE,KAAI,KAAM,gBAAgB,EAAE;QAC3CF,cAAc,CAACE,KAAI,GAAI,iBAAgB;QACvCH,KAAK,CAACI,KAAK,CAACC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UACtCC,KAAK,EAAE;QAEX,CAAC,CAAC;MACN,OAAO;QACHT,cAAc,CAACE,KAAI,GAAI,gBAAe;QACtCH,KAAK,CAACI,KAAK,CAACC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UACtCC,KAAK,EAAE;QAEX,CAAC,CAAC;MACN;IACJ;IAEA,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACvBd,CAAC,CAACe,IAAI,CAAC;QACHC,GAAG,EAAE,wCAAwC;QAC7CC,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE,CACN,CAAC;QACDC,OAAO,EAAE;UACTC,aAAa,EAAE,SAAQ,GAAIjB,KAAK,CAACI,KAAK,CAACc,IAAI,CAACC;QAC5C,CAAC;QACDC,OAAOA,CAACC,IAAI,EAAE;UACdvB,IAAI,CAACK,KAAI,GAAIkB,IAAI;QACjB,CAAC;QACDC,KAAKA,CAACD,IAAI,EAAE;UACZE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjB;MACJ,CAAC;IACL;IAEAV,YAAY,CAAC,CAAC;IAEd,OAAO;MACHV,cAAc;MACdC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}