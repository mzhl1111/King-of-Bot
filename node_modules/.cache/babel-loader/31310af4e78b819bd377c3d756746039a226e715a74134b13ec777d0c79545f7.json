{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport pkIndexView from '@/views/pk/pkIndexView';\nimport replayIndexView from \"@/views/record/replayIndexView\";\nimport rankIndexView from \"@/views/rank/rankIndexView\";\nimport userBotIndexView from \"@/views/user/bots/userBotIndexView\";\nimport notFound from \"@/views/error/notFoundView\";\nimport UserAccountLoginView from \"@/views/account/UserAccountLoginView\";\nimport UserAccountRegisterView from \"@/views/account/UserAccountRegisterView\";\nimport store from \"@/store/index\";\nconst routes = [{\n  path: \"/\",\n  name: \"home\",\n  redirect: \"/pk/\",\n  meta: {\n    requestAuth: true\n  }\n}, {\n  path: \"/pk/\",\n  name: \"pk_index\",\n  component: pkIndexView,\n  meta: {\n    requestAuth: true\n  }\n}, {\n  path: \"/records/\",\n  name: \"record_index\",\n  component: recordIndexView,\n  meta: {\n    requestAuth: true\n  }\n}, {\n  path: \"/ranks/\",\n  name: \"rank_index\",\n  component: rankIndexView,\n  meta: {\n    requestAuth: true\n  }\n}, {\n  path: \"/user/account/login/\",\n  name: \"user_account_login\",\n  component: UserAccountLoginView,\n  meta: {\n    requestAuth: false\n  }\n}, {\n  path: \"/user/account/register/\",\n  name: \"user_account_register\",\n  component: UserAccountRegisterView,\n  meta: {\n    requestAuth: false\n  }\n}, {\n  path: \"/user/bots/\",\n  name: \"user_bot_index\",\n  component: userBotIndexView,\n  meta: {\n    requestAuth: true\n  }\n}, {\n  path: \"/404/\",\n  name: \"404\",\n  component: notFound,\n  meta: {\n    requestAuth: false\n  }\n}, {\n  path: \"/:catchAll(.*)\",\n  redirect: \"404\"\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.requestAuth && !store.state.user.logged_in) {\n    next({\n      name: \"user_account_login\"\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","pkIndexView","replayIndexView","rankIndexView","userBotIndexView","notFound","UserAccountLoginView","UserAccountRegisterView","store","routes","path","name","redirect","meta","requestAuth","component","recordIndexView","router","history","beforeEach","to","from","next","state","user","logged_in"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n\nimport pkIndexView from '@/views/pk/pkIndexView'\nimport replayIndexView from \"@/views/record/replayIndexView\"\nimport rankIndexView from \"@/views/rank/rankIndexView\"\nimport userBotIndexView from \"@/views/user/bots/userBotIndexView\"\nimport notFound from \"@/views/error/notFoundView\"\nimport UserAccountLoginView from \"@/views/account/UserAccountLoginView\"\nimport UserAccountRegisterView from  \"@/views/account/UserAccountRegisterView\"\nimport store from \"@/store/index\"\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    redirect: \"/pk/\",\n    meta: {\n      requestAuth: true,\n    }\n  },\n  {\n    path: \"/pk/\",\n    name: \"pk_index\",\n    component: pkIndexView,\n    meta: {\n      requestAuth: true,\n    }\n  },\n  {\n    path: \"/records/\",\n    name: \"record_index\",\n    component: recordIndexView,\n    meta: {\n      requestAuth: true,\n    }\n  },\n  {\n    path: \"/ranks/\",\n    name: \"rank_index\",\n    component: rankIndexView,\n    meta: {\n      requestAuth: true,\n    }\n  },\n  {\n    path: \"/user/account/login/\",\n    name: \"user_account_login\",\n    component: UserAccountLoginView,\n    meta: {\n      requestAuth: false,\n    }\n  },\n  {\n    path: \"/user/account/register/\",\n    name: \"user_account_register\",\n    component: UserAccountRegisterView,\n    meta: {\n      requestAuth: false,\n    }\n  },\n  {\n    path: \"/user/bots/\",\n    name: \"user_bot_index\",\n    component: userBotIndexView,\n    meta: {\n      requestAuth: true,\n    }\n  },\n  {\n    path: \"/404/\",\n    name: \"404\",\n    component: notFound,\n    meta: {\n      requestAuth: false,\n    }\n  },\n  {\n    path: \"/:catchAll(.*)\",\n    \n    redirect: \"404\",\n  }, \n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  if(to.meta.requestAuth && !store.state.user.logged_in) {\n    next({name: \"user_account_login\"});\n  } else {\n    next();\n  }\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,gBAAgB,MAAM,oCAAoC;AACjE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,uBAAuB,MAAO,yCAAyC;AAC9E,OAAOC,KAAK,MAAM,eAAe;AAEjC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,MAAM;EAChBC,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,UAAU;EAChBI,SAAS,EAAEd,WAAW;EACtBY,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,cAAc;EACpBI,SAAS,EAAEC,eAAe;EAC1BH,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,YAAY;EAClBI,SAAS,EAAEZ,aAAa;EACxBU,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,oBAAoB;EAC1BI,SAAS,EAAET,oBAAoB;EAC/BO,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,yBAAyB;EAC/BC,IAAI,EAAE,uBAAuB;EAC7BI,SAAS,EAAER,uBAAuB;EAClCM,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,gBAAgB;EACtBI,SAAS,EAAEX,gBAAgB;EAC3BS,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,KAAK;EACXI,SAAS,EAAEV,QAAQ;EACnBQ,IAAI,EAAE;IACJC,WAAW,EAAE;EACf;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EAEtBE,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMK,MAAM,GAAGlB,YAAY,CAAC;EAC1BmB,OAAO,EAAElB,gBAAgB,CAAC,CAAC;EAC3BS;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAGF,EAAE,CAACP,IAAI,CAACC,WAAW,IAAI,CAACN,KAAK,CAACe,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE;IACrDH,IAAI,CAAC;MAACX,IAAI,EAAE;IAAoB,CAAC,CAAC;EACpC,CAAC,MAAM;IACLW,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}