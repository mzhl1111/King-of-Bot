{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PlayGround = _resolveComponent(\"PlayGround\");\n  return _ctx.$st ? (_openBlock(), _createBlock(_component_PlayGround, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_ctx","$st","_createBlock","_component_PlayGround","key","_createCommentVNode"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/views/pk/pkIndexView.vue"],"sourcesContent":["<template>\n    <PlayGround v-if=\"$st\"></PlayGround>\n</template>\n\n\n<script>\nimport PlayGround from \"../../components/PlayGround.vue\"\nimport { onMounted, onUnmounted } from \"vue\"\nimport { useStore } from \"vuex\";\n\nexport default {\n    components: {\n        PlayGround\n    },\n    setup() {\n        const store = useStore();\n        const socketUrl = `ws://localhost:8888/websocket/${store.state.user.token}`;\n\n        let socket = null;\n        onMounted(() => {\n            socket = new WebSocket(socketUrl);\n\n            socket.onopen = () => {\n                console.log(\"Connected\");\n            }\n\n            socket.onmessage = msg => {\n                const data = JSON.parse(msg.data);\n                console.log(data);\n            }\n\n            socket.onclose = () => {\n                console.log(\"Connection closed\");\n            }\n\n        });\n\n        onUnmounted(() => {\n            socket.close();\n        })\n    }\n\n}\n</script>\n\n\n<style scoped>\n</style>"],"mappings":";;;SACsBA,IAAA,CAAAC,GAAG,I,cAArBC,YAAA,CAAoCC,qBAAA;IADxCC,GAAA;EAAA,MAAAC,mBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}