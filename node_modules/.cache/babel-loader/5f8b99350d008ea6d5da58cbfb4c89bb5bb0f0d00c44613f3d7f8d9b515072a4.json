{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_CoundDownEffect = _resolveComponent(\"CoundDownEffect\");\n  const _component_PlayGround = _resolveComponent(\"PlayGround\");\n  const _component_MatchGround = _resolveComponent(\"MatchGround\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CoundDownEffect), _ctx.$store.state.pk.status === 'Playing' && _ctx.show_countdown === 'no' ? (_openBlock(), _createBlock(_component_PlayGround, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _ctx.$store.state.pk.status === 'Matching' && _ctx.show_countdown === 'no' ? (_openBlock(), _createBlock(_component_MatchGround, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_CoundDownEffect","_ctx","$store","state","pk","status","show_countdown","_createBlock","_component_PlayGround","key","_createCommentVNode","_component_MatchGround"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/views/pk/pkIndexView.vue"],"sourcesContent":["<template>\n    <CoundDownEffect />\n    <PlayGround v-if=\"$store.state.pk.status === 'Playing' && show_countdown === 'no'\"></PlayGround>\n    <MatchGround v-if=\"$store.state.pk.status === 'Matching' && show_countdown === 'no'\"></MatchGround>\n</template>\n\n\n<script>\nimport PlayGround from \"@/components/PlayGround.vue\"\nimport MatchGround from \"@/components/MatchGround.vue\"\nimport CoundDownEffect from \"@/components/CoundDownEffect.vue\";\nimport { onMounted, onUnmounted , ref} from \"vue\"\nimport { useStore } from \"vuex\";\nimport CoundDownEffect from \"@/components/CoundDownEffect.vue\";\n\nexport default {\n    components: {\n    PlayGround,\n    MatchGround,\n    CoundDownEffect\n},\n    setup() {\n        const store = useStore();\n        const socketUrl = `ws://localhost:8888/websocket/${store.state.user.token}`;\n        let show_countdown = ref(\"no\")\n\n        let socket = null;\n        onMounted(() => {\n            store.commit(\"updateOpponent\", {\n                username: '???',\n                photo : \"https://cdn.acwing.com/media/article/image/2022/08/09/1_1db2488f17-anonymous.png\"\n            })\n            socket = new WebSocket(socketUrl);\n\n            socket.onopen = () => {\n                console.log(\"Connected\");\n                store.commit(\"updateSocket\", socket)\n            }\n\n            socket.onmessage = msg => {\n                const data = JSON.parse(msg.data);\n                if (data.event === \"start-matching\") { // maching success\n                    store.commit(\"updateOpponent\", {\n                        username: data.opponent_username,\n                        photo: data.opponent_photo,\n                    });\n                    setTimeout(() => {\n                        store.commit(\"updateStatus\", \"Playing\"), 2000\n                    })\n                    store.commit(\"updateGameMap\", data.game_map)\n                }\n                console.log(data);\n            }\n\n            socket.onclose = () => {\n                console.log(\"Connection closed\");\n            }\n\n        });\n\n        onUnmounted(() => {\n            socket.close();\n        })\n    }\n\n}\n</script>\n\n\n<style scoped>\n</style>"],"mappings":";;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAmBC,0BAAA,GACDC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,EAAE,CAACC,MAAM,kBAAkBJ,IAAA,CAAAK,cAAc,a,cAAxEC,YAAA,CAAgGC,qBAAA;IAFpGC,GAAA;EAAA,MAAAC,mBAAA,gBAGuBT,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,EAAE,CAACC,MAAM,mBAAmBJ,IAAA,CAAAK,cAAc,a,cAA1EC,YAAA,CAAmGI,sBAAA;IAHvGF,GAAA;EAAA,MAAAC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}