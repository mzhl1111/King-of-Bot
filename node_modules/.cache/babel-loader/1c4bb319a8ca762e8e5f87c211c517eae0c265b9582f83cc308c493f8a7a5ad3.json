{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ContentCard from \"@/components/ContentCard\";\nimport { useStore } from \"vuex\";\nimport { ref } from \"vue\";\nimport router from \"@/router/index\";\nexport default {\n  components: {\n    ContentCard\n  },\n  setup() {\n    const store = useStore();\n    let username = ref('');\n    let password = ref('');\n    let error_message = ref('');\n    let show_content = ref(false);\n    const jwt_token = localStorage.getItem(\"jwt_token\");\n    if (jwt_token) {\n      store.commit('updateToken', jwt_token);\n      store.dispatch('getInfo', {\n        success() {\n          router.push({\n            name: \"home\"\n          });\n          store.commit(\"updatePullingInfo\", false);\n        },\n        error() {\n          store.commit(\"updatePullingInfo\", false);\n        }\n      });\n    } else {\n      store.commit(\"updatePullingInfo\", false);\n    }\n    const login = () => {\n      error_message.value = \"\";\n      store.dispatch(\"login\", {\n        username: username.value,\n        password: password.value,\n        success() {\n          store.dispatch(\"getInfo\", {\n            success() {\n              router.push({\n                name: \"home\"\n              });\n            }\n          });\n        },\n        error() {\n          error_message.value = \"Invalid username or password\";\n        }\n      });\n    };\n    return {\n      username,\n      password,\n      error_message,\n      show_content,\n      login\n    };\n  }\n};","map":{"version":3,"names":["ContentCard","useStore","ref","router","components","setup","store","username","password","error_message","show_content","jwt_token","localStorage","getItem","commit","dispatch","success","push","name","error","login","value"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/views/account/UserAccountLoginView.vue"],"sourcesContent":["<template>\n    <ContentCard v-if=\"$store.state.user.pulling_info\">\n      <div class=\"row justify-content-md-center\">\n        <div class=\"col-3\">\n          <form @submit.prevent=\"login\">\n            <div class=\"mb-3\">\n              <label for=\"username\" class=\"form-label\">Username</label>\n              <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"please input username\">\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Password</label>\n              <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"please input password\">\n            </div>\n            <div class=\"error_message\">{{ error_message }}</div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n          </form>\n        </div>\n      </div>\n    </ContentCard>\n  </template>\n   \n  \n<script>\nimport ContentCard from \"@/components/ContentCard\"\nimport { useStore } from \"vuex\"\nimport { ref } from \"vue\"\nimport router from \"@/router/index\"\n\nexport default {\n    components: {\n        ContentCard\n    },\n    setup() {\n      const store = useStore();\n      let username = ref('');\n      let password = ref('');\n      let error_message = ref('');\n      let show_content = ref(false);\n\n      const jwt_token = localStorage.getItem(\"jwt_token\")\n      if (jwt_token) {\n        store.commit('updateToken', jwt_token);\n        store.dispatch('getInfo', {\n          success() {\n            router.push({name: \"home\"})\n            store.commit(\"updatePullingInfo\", false)\n          },\n          error() {\n            store.commit(\"updatePullingInfo\", false)\n          }\n        })\n      } else {\n        store.commit(\"updatePullingInfo\", false);\n      }\n\n      const login = () => {\n        error_message.value = \"\";\n        store.dispatch(\"login\", {\n          username: username.value,\n          password: password.value,\n          success() {\n            store.dispatch(\"getInfo\", {\n              success() {\n                router.push({ name: \"home\" });\n              }\n            })\n          },\n          error() {\n            error_message.value = \"Invalid username or password\";\n          }\n        })\n\n      }\n\n      return {\n        username,\n        password,\n        error_message,\n        show_content,\n        login,\n      }\n\n    }\n}\n</script>\n\n  \n<style scoped>\n\nbutton {\n  width: 100%;\n}\n\ndiv.error_message {\n  color: red;\n  padding-bottom: 5px;\n}\n</style>"],"mappings":";AAuBA,OAAOA,WAAU,MAAO,0BAAyB;AACjD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,GAAE,QAAS,KAAI;AACxB,OAAOC,MAAK,MAAO,gBAAe;AAElC,eAAe;EACXC,UAAU,EAAE;IACRJ;EACJ,CAAC;EACDK,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,IAAIM,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIM,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIO,aAAY,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC3B,IAAIQ,YAAW,GAAIR,GAAG,CAAC,KAAK,CAAC;IAE7B,MAAMS,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;IAClD,IAAIF,SAAS,EAAE;MACbL,KAAK,CAACQ,MAAM,CAAC,aAAa,EAAEH,SAAS,CAAC;MACtCL,KAAK,CAACS,QAAQ,CAAC,SAAS,EAAE;QACxBC,OAAOA,CAAA,EAAG;UACRb,MAAM,CAACc,IAAI,CAAC;YAACC,IAAI,EAAE;UAAM,CAAC;UAC1BZ,KAAK,CAACQ,MAAM,CAAC,mBAAmB,EAAE,KAAK;QACzC,CAAC;QACDK,KAAKA,CAAA,EAAG;UACNb,KAAK,CAACQ,MAAM,CAAC,mBAAmB,EAAE,KAAK;QACzC;MACF,CAAC;IACH,OAAO;MACLR,KAAK,CAACQ,MAAM,CAAC,mBAAmB,EAAE,KAAK,CAAC;IAC1C;IAEA,MAAMM,KAAI,GAAIA,CAAA,KAAM;MAClBX,aAAa,CAACY,KAAI,GAAI,EAAE;MACxBf,KAAK,CAACS,QAAQ,CAAC,OAAO,EAAE;QACtBR,QAAQ,EAAEA,QAAQ,CAACc,KAAK;QACxBb,QAAQ,EAAEA,QAAQ,CAACa,KAAK;QACxBL,OAAOA,CAAA,EAAG;UACRV,KAAK,CAACS,QAAQ,CAAC,SAAS,EAAE;YACxBC,OAAOA,CAAA,EAAG;cACRb,MAAM,CAACc,IAAI,CAAC;gBAAEC,IAAI,EAAE;cAAO,CAAC,CAAC;YAC/B;UACF,CAAC;QACH,CAAC;QACDC,KAAKA,CAAA,EAAG;UACNV,aAAa,CAACY,KAAI,GAAI,8BAA8B;QACtD;MACF,CAAC;IAEH;IAEA,OAAO;MACLd,QAAQ;MACRC,QAAQ;MACRC,aAAa;MACbC,YAAY;MACZU;IACF;EAEF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}