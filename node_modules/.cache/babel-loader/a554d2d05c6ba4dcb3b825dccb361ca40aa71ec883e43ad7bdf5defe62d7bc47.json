{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PlayGround = _resolveComponent(\"PlayGround\");\n  return _openBlock(), _createBlock(_component_PlayGround);\n}","map":{"version":3,"names":["_createBlock","_component_PlayGround"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/views/pk/pkIndexView.vue"],"sourcesContent":["<template>\n    <PlayGround></PlayGround>\n</template>\n\n\n<script>\nimport PlayGround from \"../../components/PlayGround.vue\"\nimport { onMounted, onUnmounted } from \"vue\"\nimport { useStore } from \"vuex\";\n\nexport default {\n    components: {\n        PlayGround\n    },\n    setup() {\n        const store = useStore();\n        const socketUrl = `ws://localhost:8888/websocket/${store.state.userid}`;\n\n        let socket = null;\n        onMounted(() => {\n            socket = new WebSocket(socketUrl);\n\n            socket.onopen = () => {\n                console.log(\"Connected\");\n            }\n\n            socket.onmessage = msg => {\n                const data = JSON.parse(msg.data);\n                console.log(data);\n            }\n\n            socket.onclose = () => {\n                console.log(\"Connection closed\");\n            }\n\n        });\n\n        onUnmounted(() => {\n            socket.close();\n        })\n    }\n\n}\n</script>\n\n\n<style scoped>\n</style>"],"mappings":";;;uBACIA,YAAA,CAAyBC,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}