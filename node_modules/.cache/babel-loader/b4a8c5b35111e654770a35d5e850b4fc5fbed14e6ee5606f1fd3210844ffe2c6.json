{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GameObject } from \"./GameObject\";\nimport { Wall } from \"./wall\";\nimport { Snake } from \"./Snake\";\nexport class GameMap extends GameObject {\n  constructor(ctx, parent) {\n    super();\n    this.ctx = ctx;\n    this.parent = parent;\n    this.L = 0;\n    this.rows = 13;\n    this.cols = 14;\n    this.walls = [];\n    this.inner_wall_count = 20;\n    this.snakes = [new S()];\n  }\n  check_connectivity(g, sx, sy, ex, ey) {\n    if (sx == ex && sy == ey) return true;\n    g[sx][sy] = true;\n    let dx = [-1, 0, 1, 0],\n      dy = [0, 1, 0, -1];\n    for (let i = 0; i < 4; i++) {\n      let x = sx + dx[i],\n        y = sy + dy[i];\n      if (!g[x][y] && this.check_connectivity(g, x, y, ex, ey)) return true;\n    }\n    return false;\n  }\n  create_walls() {\n    const g = [];\n    for (let r = 0; r < this.rows; r++) {\n      g[r] = [];\n      for (let c = 0; c < this.cols; c++) {\n        g[r][c] = false;\n      }\n    }\n\n    //add walls for surroundings \n\n    for (let r = 0; r < this.rows; r++) {\n      g[r][0] = g[r][this.cols - 1] = true;\n    }\n    for (let c = 0; c < this.cols; c++) {\n      g[0][c] = g[this.rows - 1][c] = true;\n    }\n\n    //add random walls\n    for (let i = 0; i < this.inner_wall_count; i++) {\n      for (let j = 0; j < 1000; j++) {\n        let r = parseInt(Math.random() * this.rows);\n        let c = parseInt(Math.random() * this.cols);\n        if (g[r][c] || g[this.rows - 1 - r][this.cols - 1 - c]) continue;\n        if (r == this.rows - 2 && c == 1 || r == 1 && c == this.cols - 2) continue;\n        g[r][c] = g[this.rows - 1 - r][this.cols - 1 - c] = true;\n        console.log(i, r, c);\n        break;\n      }\n    }\n    const copy_g = JSON.parse(JSON.stringify(g));\n    if (!this.check_connectivity(copy_g, this.rows - 2, 1, 1, this.cols - 2)) return false;\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.cols; c++) {\n        if (g[r][c]) {\n          this.walls.push(new Wall(r, c, this));\n        }\n      }\n    }\n    return true;\n  }\n  start() {\n    for (let i = 0; i < 1000; i++) {\n      if (this.create_walls()) break;\n    }\n  }\n  update_size() {\n    this.L = parseInt(Math.min(this.parent.clientWidth / this.cols, this.parent.clientHeight / this.rows));\n    this.ctx.canvas.width = this.L * this.cols;\n    this.ctx.canvas.height = this.L * this.rows;\n  }\n  update() {\n    this.update_size();\n    this.render();\n  }\n  render() {\n    const color_even = \"#82EAFD\",\n      color_odd = \"#02BADA\";\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.cols; c++) {\n        if ((r + c) % 2 == 0) {\n          this.ctx.fillStyle = color_even;\n        } else {\n          this.ctx.fillStyle = color_odd;\n        }\n        this.ctx.fillRect(c * this.L, r * this.L, this.L, this.L);\n      }\n    }\n  }\n}","map":{"version":3,"names":["GameObject","Wall","Snake","GameMap","constructor","ctx","parent","L","rows","cols","walls","inner_wall_count","snakes","S","check_connectivity","g","sx","sy","ex","ey","dx","dy","i","x","y","create_walls","r","c","j","parseInt","Math","random","console","log","copy_g","JSON","parse","stringify","push","start","update_size","min","clientWidth","clientHeight","canvas","width","height","update","render","color_even","color_odd","fillStyle","fillRect"],"sources":["/Users/muzhouliu/Desktop/acwing/kob/web/src/assets/scripts/GameMap.js"],"sourcesContent":["import { GameObject } from \"./GameObject\";\nimport { Wall } from \"./wall\";\nimport { Snake } from \"./Snake\";\n\nexport class GameMap extends GameObject {\n    constructor(ctx, parent) {\n        super();\n\n\n        this.ctx = ctx;\n        this.parent = parent;\n\n        this.L = 0;\n\n        this.rows = 13;\n        this.cols = 14;\n\n        this.walls = [];\n        this.inner_wall_count = 20;\n\n        this.snakes = [\n            new S\n        ]\n    }\n\n    check_connectivity(g, sx, sy, ex, ey) {\n        if(sx == ex && sy == ey) return true;\n\n        g[sx][sy] = true;\n        let dx = [-1, 0, 1, 0], dy =[0, 1, 0, -1];\n        for (let i =0; i <4 ; i++) {\n            let x = sx + dx[i], y = sy + dy[i];\n            if(!g[x][y] && this.check_connectivity(g, x, y, ex, ey))\n                return true;\n        }\n\n        return false;\n    }\n\n\n    create_walls() {\n        const g = [];\n        for (let r = 0; r < this.rows; r++) {\n            g[r] = [];\n            for (let c = 0; c < this.cols; c++) {\n                g[r][c] = false;\n            }\n        }\n\n        //add walls for surroundings \n\n        for (let r = 0; r < this.rows; r++) {\n            g[r][0] = g[r][this.cols - 1] = true;\n        }\n\n        for (let c = 0; c < this.cols; c++) {\n            g[0][c] = g[this.rows - 1][c] = true;\n        }\n\n        //add random walls\n        for(let i = 0; i < this.inner_wall_count; i++) {\n            for (let j = 0; j < 1000; j++) {\n                let r = parseInt(Math.random() * this.rows);\n                let c = parseInt(Math.random() * this.cols);\n                if(g[r][c] || g[this.rows - 1 - r][this.cols - 1 - c]) continue;\n                if(r == this.rows - 2 && c == 1 || r == 1 && c == this.cols-2) continue;\n\n                g[r][c] = g[this.rows - 1 - r][this.cols - 1 - c] = true;\n                console.log(i, r, c)\n                break;\n            }\n        }\n\n        const copy_g = JSON.parse(JSON.stringify(g));\n        if(!this.check_connectivity(copy_g, this.rows - 2, 1, 1, this.cols - 2)) return false;\n\n        for(let r = 0; r < this.rows; r++) {\n            for(let c = 0; c < this.cols; c++) {\n                if(g[r][c]) {\n                    this.walls.push(new Wall(r, c, this))\n                }\n            }\n        }\n\n        return true;\n    }\n\n\n    start () {\n        for(let i =0; i < 1000; i++){\n            if (this.create_walls()) break;\n        }\n\n    }\n\n    update_size() {\n        this.L = parseInt(Math.min(this.parent.clientWidth / this.cols, this.parent.clientHeight / this.rows));\n        this.ctx.canvas.width = this.L * this.cols;\n        this.ctx.canvas.height = this.L * this.rows;\n    }\n\n    update() {\n        this.update_size();\n        this.render();\n    }\n\n    render() {\n        const color_even = \"#82EAFD\", color_odd = \"#02BADA\";\n        for (let r = 0; r < this.rows; r++){\n            for (let c = 0; c < this.cols; c++) {\n                if ((r + c) % 2 == 0) {\n                    this.ctx.fillStyle = color_even;\n                } else {\n                    this.ctx.fillStyle = color_odd;\n                }\n                this.ctx.fillRect(c * this.L, r * this.L, this.L, this.L)\n            }\n        }\n    }\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,OAAO,SAASH,UAAU,CAAC;EACpCI,WAAWA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACrB,KAAK,CAAC,CAAC;IAGP,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACC,CAAC,GAAG,CAAC;IAEV,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IAEd,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAE1B,IAAI,CAACC,MAAM,GAAG,CACV,IAAIC,CAAC,CAAD,CAAC,CACR;EACL;EAEAC,kBAAkBA,CAACC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAClC,IAAGH,EAAE,IAAIE,EAAE,IAAID,EAAE,IAAIE,EAAE,EAAE,OAAO,IAAI;IAEpCJ,CAAC,CAACC,EAAE,CAAC,CAACC,EAAE,CAAC,GAAG,IAAI;IAChB,IAAIG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAEC,EAAE,GAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,KAAK,IAAIC,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAE,CAAC,EAAGA,CAAC,EAAE,EAAE;MACvB,IAAIC,CAAC,GAAGP,EAAE,GAAGI,EAAE,CAACE,CAAC,CAAC;QAAEE,CAAC,GAAGP,EAAE,GAAGI,EAAE,CAACC,CAAC,CAAC;MAClC,IAAG,CAACP,CAAC,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,IAAI,IAAI,CAACV,kBAAkB,CAACC,CAAC,EAAEQ,CAAC,EAAEC,CAAC,EAAEN,EAAE,EAAEC,EAAE,CAAC,EACnD,OAAO,IAAI;IACnB;IAEA,OAAO,KAAK;EAChB;EAGAM,YAAYA,CAAA,EAAG;IACX,MAAMV,CAAC,GAAG,EAAE;IACZ,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;MAChCX,CAAC,CAACW,CAAC,CAAC,GAAG,EAAE;MACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;QAChCZ,CAAC,CAACW,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,KAAK;MACnB;IACJ;;IAEA;;IAEA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;MAChCX,CAAC,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGX,CAAC,CAACW,CAAC,CAAC,CAAC,IAAI,CAACjB,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI;IACxC;IAEA,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;MAChCZ,CAAC,CAAC,CAAC,CAAC,CAACY,CAAC,CAAC,GAAGZ,CAAC,CAAC,IAAI,CAACP,IAAI,GAAG,CAAC,CAAC,CAACmB,CAAC,CAAC,GAAG,IAAI;IACxC;;IAEA;IACA,KAAI,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,gBAAgB,EAAEW,CAAC,EAAE,EAAE;MAC3C,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIF,CAAC,GAAGG,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACvB,IAAI,CAAC;QAC3C,IAAImB,CAAC,GAAGE,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACtB,IAAI,CAAC;QAC3C,IAAGM,CAAC,CAACW,CAAC,CAAC,CAACC,CAAC,CAAC,IAAIZ,CAAC,CAAC,IAAI,CAACP,IAAI,GAAG,CAAC,GAAGkB,CAAC,CAAC,CAAC,IAAI,CAACjB,IAAI,GAAG,CAAC,GAAGkB,CAAC,CAAC,EAAE;QACvD,IAAGD,CAAC,IAAI,IAAI,CAAClB,IAAI,GAAG,CAAC,IAAImB,CAAC,IAAI,CAAC,IAAID,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAI,IAAI,CAAClB,IAAI,GAAC,CAAC,EAAE;QAE/DM,CAAC,CAACW,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGZ,CAAC,CAAC,IAAI,CAACP,IAAI,GAAG,CAAC,GAAGkB,CAAC,CAAC,CAAC,IAAI,CAACjB,IAAI,GAAG,CAAC,GAAGkB,CAAC,CAAC,GAAG,IAAI;QACxDK,OAAO,CAACC,GAAG,CAACX,CAAC,EAAEI,CAAC,EAAEC,CAAC,CAAC;QACpB;MACJ;IACJ;IAEA,MAAMO,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACtB,CAAC,CAAC,CAAC;IAC5C,IAAG,CAAC,IAAI,CAACD,kBAAkB,CAACoB,MAAM,EAAE,IAAI,CAAC1B,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE,OAAO,KAAK;IAErF,KAAI,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;MAC/B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;QAC/B,IAAGZ,CAAC,CAACW,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE;UACR,IAAI,CAACjB,KAAK,CAAC4B,IAAI,CAAC,IAAIrC,IAAI,CAACyB,CAAC,EAAEC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzC;MACJ;IACJ;IAEA,OAAO,IAAI;EACf;EAGAY,KAAKA,CAAA,EAAI;IACL,KAAI,IAAIjB,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAC;MACxB,IAAI,IAAI,CAACG,YAAY,CAAC,CAAC,EAAE;IAC7B;EAEJ;EAEAe,WAAWA,CAAA,EAAG;IACV,IAAI,CAACjC,CAAC,GAAGsB,QAAQ,CAACC,IAAI,CAACW,GAAG,CAAC,IAAI,CAACnC,MAAM,CAACoC,WAAW,GAAG,IAAI,CAACjC,IAAI,EAAE,IAAI,CAACH,MAAM,CAACqC,YAAY,GAAG,IAAI,CAACnC,IAAI,CAAC,CAAC;IACtG,IAAI,CAACH,GAAG,CAACuC,MAAM,CAACC,KAAK,GAAG,IAAI,CAACtC,CAAC,GAAG,IAAI,CAACE,IAAI;IAC1C,IAAI,CAACJ,GAAG,CAACuC,MAAM,CAACE,MAAM,GAAG,IAAI,CAACvC,CAAC,GAAG,IAAI,CAACC,IAAI;EAC/C;EAEAuC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACP,WAAW,CAAC,CAAC;IAClB,IAAI,CAACQ,MAAM,CAAC,CAAC;EACjB;EAEAA,MAAMA,CAAA,EAAG;IACL,MAAMC,UAAU,GAAG,SAAS;MAAEC,SAAS,GAAG,SAAS;IACnD,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAC;MAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,IAAI,EAAEkB,CAAC,EAAE,EAAE;QAChC,IAAI,CAACD,CAAC,GAAGC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;UAClB,IAAI,CAACtB,GAAG,CAAC8C,SAAS,GAAGF,UAAU;QACnC,CAAC,MAAM;UACH,IAAI,CAAC5C,GAAG,CAAC8C,SAAS,GAAGD,SAAS;QAClC;QACA,IAAI,CAAC7C,GAAG,CAAC+C,QAAQ,CAACzB,CAAC,GAAG,IAAI,CAACpB,CAAC,EAAEmB,CAAC,GAAG,IAAI,CAACnB,CAAC,EAAE,IAAI,CAACA,CAAC,EAAE,IAAI,CAACA,CAAC,CAAC;MAC7D;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}